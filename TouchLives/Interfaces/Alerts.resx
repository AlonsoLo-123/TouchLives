<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Icon_Minimize.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAs
        SwAALEsBpT2WqQAAAdFJREFUeF7t21F1wkAUBNBIQAISkICEOqiFOqAS6gAJlYAEJCChEtLZ5n30p4eE
        r+5y7zmjYCaELGECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+r3med8kpuSbQtC2ck33NhBGl4JfkK4G/nGoujCTFtosf
        1vAhMJIUuk9uP9XCOseaD71Lme9Lp7DapeZD71KmAz8esasJ0bMqE7Y61IToWZUJWzkHGEGKdADIIzwC
        jCBFfix9wmrXmg+9S5ntZ0DY4rXmwwhS6NvSK9x1rtkwkhTrfQDu+Uw8+48q5R6SS2safmmb8LX/WaTs
        9q/Aozx92g3BHR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPo3Td/9
        0j+yssgM/wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUAAAAFACAYAAADNkKWqAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAChFJREFUeF7t3f9xK/UZxeFbAh1ACZRACZSQDkIHoYPQQeiAEiiBEiiBEpJ9h/Fk
        rr22JB97z/54npnzt4XvVx+tVrb5AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAffLPt+2T+W/bzsP8X9e9lPy35YNo+Lr8335Mdl8z2a
        79Xa93CrzVmZM+PfisOZQ/uvZb8v+++O9+eyebLN472q+W+f2M33Yu17tJfNWZoofrcMdmlesfcevdf2
        FMMrPMHmimpeoP5atva92Pv+WDZnDXZhDuPeryAe2VlDePTwPd+cOSGkZu7tHfWK79bO9uT657KzhO/5
        5t/KW2M2NU+otcN4th39anCu+s76IvV8c3ULn2qeUBOFtQN41h31CmMe85luTdyzOZs+NeZTzMGaG9Br
        B+/sm7eP85b/KOaxnvUt763NGfWWmA818bva1cTzHSWCV47f0+asuhLkw1z1yu/5Jix7vrqYx3b1+D1t
        zizE5gdl1w7YVbfXq4sr3vO7tTm78G7zoyBrB+vqm09W9+ZqH07du/nVPniYK4q3t6cnlheq17f32xbs
        lCuKtzdPrD28FfZCdXu/LYO7zSeJawfJvt78gn6bF6r7duU/esGDrvLbA+naV4Fz9bf2uOzl9njflh3y
        pHpszatAV3+PzVUgN3lSPba5Cmxx7++x/bIM3uRJ9fgaVxbzNdcei72+5osVB+BJ9b41rixcqb9v3gbz
        qnkirx0ae3tz1bw1V+rvm7fBvMqnv+/flp8Gz9daewx2ez4N5lVzj2Tt0Njtzf9RbStuVbx/7gOyyo+/
        ZNvyV+Pma609Brtv3y6Dr7iqyLblvSX3arMd6Y/bshEBzDafym7l12Vrj8Hu25a3KzgIf1EkmwAeZ/53
        mrywZQC3PIBrX/8zdtYAbuWs54+DEMBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCq
        BDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgR
        QKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwC
        mBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLA
        bAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCp
        EsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBG
        AKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJ
        YEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoA
        swlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGk
        SgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZ
        AaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwm
        gBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoB
        zCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQ
        KgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBm
        BJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCb
        AGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoE
        MJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFA
        qgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKY
        EUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkSwGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBs
        ApgRQKoEMJsAZgSQKgHMJoAZAaRKALMJYEYAqRLAbAKYEUCqBDCbAGYEkCoBzCaAGQGkSgCzCWBGAKkS
        wGwCmBFAqgQwmwBmBJAqAcwmgBkBpEoAswlgRgCpEsBsApgRQKoEMJsAZgSQKgHMJoAZAaRqywN4xp01
        gGecAPLCj8vWDovdNwE8zn5YBl/5ftnaYbH79suyrczXWnsMdt8EkBe+W7Z2WOy+/bRsK/O11h6D3bdv
        l8ELfy1bOzB2e1teVbhd8f7NGYdVvy9bOzR2e98s28p8rbXHYLc3ZxxWubf0vv25bGvzNdcei729Le/V
        cjDzNm7t0Njb2/IT4CderN43H4DwJvcBH1/jSeXF6vE1rtQ5GFcWj635pPJi9dgaV+ocjCuLx9Z8Uv28
        bO0x2frmR73gJp8G37/mk2o+DXYVeN98+svdXAXetz28pXIVeN/mN53gbr8tWztI9vfm3t8e3lK5Crw9
        9/542Dy5PbFe357+oohfjXt9e3mh4oA8sda3xysK923X509fEfFjMV9vr1cU81Z4HtvaY77q/NYHH+KP
        ZWsH7GqbWwJ7fjvltsX/N2cWPoSri7/DcoRPEucxXj2Cc1bnzMKHmauLq14JHiV+T64cwTmj4senmIN1
        tT/HftRPEecxX+2qfc6m+PHprvLDt/PJ6pGfUBPBq7xgbfkXueHUVxjz9vFMT6j5UZCz/lvNi5Tf8qDm
        TE+uCd9c3Z7xbdTZrgbnzPkZP3ZjDuNRPyQ5c/ieewrhUV+05opP+NiteYJNTPb+mwkTgPlB2Sv/heD5
        bz9CDOcszZm68r8VBzRXVHNo5xV7DvD8CllrE7u5rzf/RzWfFL709G8136P5Xq19D7fanJU5M3Nvz78V
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADQ9uXL/wAu0uuisnt+HwAAAABJRU5ErkJggg==
</value>
  </data>
</root>